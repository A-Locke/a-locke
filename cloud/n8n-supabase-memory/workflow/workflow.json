{
  "name": "AI Chatbot",
  "nodes": [
    {
      "parameters": {
        "model": "deepseek/deepseek-chat-v3-0324:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        140,
        780
      ],
      "id": "__autogenerated__",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "__REPLACE_ME__",
          "name": "__OPENROUTERAPI__"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=[\n  {\n    \"role\": \"system\",\n    \"content\": \"You are a helpful assistant. Use the user's message and previous conversation to respond thoughtfully.\"\n  },\n  {\n    \"role\": \"user\",\n    \"content\": Chat History:\n{{ $node[\"Fetch Memory\"].json.map(m => `${m.role}: ${m.content}`).join(\"\\\\n\") }}\n  }\n]",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        140,
        560
      ],
      "id": "__autogenerated__",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chat",
        "options": {}
      },
      "id": "__autogenerated__",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1080,
        560
      ],
      "webhookId": "__REDACTED__"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "97b53703-5e8e-428d-b210-69c808a29351",
              "leftValue": "={{ $json[\"session_id\"] !== null }}",
              "rightValue": "={{ $json[\"session_id\"] !== null }}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -740,
        560
      ],
      "id": "__autogenerated__",
      "name": "Session ID provided?"
    },
    {
      "parameters": {
        "jsCode": "function generateUUIDv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0,\n          v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn [{\n  json: {\n    uuid: generateUUIDv4()\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -580,
        720
      ],
      "id": "__autogenerated__",
      "name": "Generate UUID"
    },
    {
      "parameters": {
        "jsCode": "const body = $json.body;\n\nconst session_id = (!body.session_id || body.session_id === \"new\")\n  ? null\n  : body.session_id;\n\nreturn [\n  {\n    json: {\n      user_id: body.user_id,\n      session_id,\n      message: body.message,\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -900,
        560
      ],
      "id": "__autogenerated__",
      "name": "Check Session ID"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "=public",
          "mode": "name"
        },
        "table": {
          "__rl": true,
          "value": "=n8n_chat_messages",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "content": "={{ $json.message }}",
            "session_id": "={{ $json.session_id }}",
            "role": "user",
            "user_id": "={{ $json.user_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "role",
              "displayName": "role",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content",
              "displayName": "content",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -220,
        560
      ],
      "id": "__autogenerated__",
      "name": "Insert User Message",
      "credentials": {
        "postgres": {
          "id": "__REPLACE_ME__",
          "name": "__POSTGRES__"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT role, content\nFROM n8n_chat_messages\nWHERE session_id = '{{ $json[\"session_id\"] || $node[\"Generate UUID (session_id)\"].json[\"uuid\"] }}'\nORDER BY created_at ASC\nLIMIT 10;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -40,
        560
      ],
      "id": "__autogenerated__",
      "name": "Fetch Memory",
      "credentials": {
        "postgres": {
          "id": "__REPLACE_ME__",
          "name": "__POSTGRES__"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_messages",
          "mode": "list",
          "cachedResultName": "n8n_chat_messages"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "user_id": "={{ $('Insert User Message').item.json.user_id }}",
            "session_id": "={{ $('Insert User Message').item.json.session_id }}",
            "role": "assistant",
            "content": "={{ $json.output }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "role",
              "displayName": "role",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        500,
        560
      ],
      "id": "__autogenerated__",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "__REPLACE_ME__",
          "name": "__POSTGRES__"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { reply: $node[\"AI Agent\"].json[\"message\"] } }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        720,
        560
      ],
      "id": "__autogenerated__",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d77325bd-5700-4218-a660-7415b5206d8a",
              "name": "=session_id",
              "value": "={{ $json.uuid }}",
              "type": "string"
            },
            {
              "id": "540cdfed-cb29-43d4-a4aa-88ff371efe72",
              "name": "user_id",
              "value": "={{ $node[\"Check Session ID\"].json[\"user_id\"] }}",
              "type": "string"
            },
            {
              "id": "817e56b7-5804-4ce8-b410-0ede32a47b1b",
              "name": "message",
              "value": "={{ $node[\"Check Session ID\"].json[\"message\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -400,
        720
      ],
      "id": "__autogenerated__",
      "name": "Set Values False"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9aae79c7-d844-4d09-897d-f04bbadcc80a",
              "name": "=user_id",
              "value": "={{ $json[\"user_id\"] }}",
              "type": "string"
            },
            {
              "id": "80d708c2-bc3f-489c-8c4e-aa3e1a4e31f3",
              "name": "message",
              "value": "={{ $json[\"message\"] }}",
              "type": "string"
            },
            {
              "id": "570b6edf-8f78-4ff1-8788-697bc005cd58",
              "name": "session_id",
              "value": "={{ $json[\"session_id\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -420,
        560
      ],
      "id": "__autogenerated__",
      "name": "Set Values True"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Check Session ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Session ID provided?": {
      "main": [
        [
          {
            "node": "Set Values True",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate UUID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate UUID": {
      "main": [
        [
          {
            "node": "Set Values False",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Session ID": {
      "main": [
        [
          {
            "node": "Session ID provided?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert User Message": {
      "main": [
        [
          {
            "node": "Fetch Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Memory": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Values False": {
      "main": [
        [
          {
            "node": "Insert User Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Values True": {
      "main": [
        [
          {
            "node": "Insert User Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6150ce3e-3e9e-488e-9907-87621290ef10",
  "id": "dFnfZfyog7O2Z2A5",
  "tags": []
}
